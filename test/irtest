#!/bin/sh

set -eu

if [ $# -ne 1 ]
then
	echo "Usage: $0 ir-file" >&2
	exit 1
fi

if [ -z "$ir" ]
then
	echo "$0: no \$ir" >&2
	exit 1
fi

set +u
if [ -z "$TMPDIR" ]
then TMPDIR=/tmp
fi
set -u

tmp="$TMPDIR"/$$.ir
trap "rm -f '$tmp'" EXIT

irdiff(){
	sed '/#/d' "$1"      >$tmp.in
	"$ir" $opt --emit=ir "$1" | sed 's/#.*//; /^$/d' >$tmp.out

	diff -u "$tmp.in" "$tmp.out"
}

f="$1"
type=$(head -1 "$f" | sed -En 's;.*test(-opt)?=([a-z0-9_]*).*;\2;p')
rest=$(head -1 "$f" | sed -En 's;.*test(-opt)?=[a-z0-9_]* (.*);\2;p')

if head -1 "$f" | grep 'test-opt=' >/dev/null
then opt=-O
else opt=
fi

case "$type" in
	irdiff)
		irdiff "$f"
		;;
	grep_*)
		backend=$(echo "$type" | sed 's;grep_;;')

		while read regex
		do
			"$ir" $opt "--emit=$backend" "$f" | grep "$regex" >/dev/null
		done <<-!
		$(echo "$rest" | tr '&' '\n')
		!
		;;
	harness)
		"$ir" $opt "$f" > harness/src.s
		(
			cd harness
			make -sB

			set +e
			./harness
			ec=$?
			set -e

			[ $ec -eq $rest ]
		)
		;;
	sh)
		export f
		sh <<-!
		$rest
		!
		;;
	error)
		if "$ir" $opt --emit=ir "$f" >/dev/null 2>"$tmp"
		then
			echo "expected '$f' to raise an error" >&2
			exit 1
		fi

		while read expected_err
		do
			if ! grep -F "$expected_err" "$tmp" >/dev/null
			then
				echo "expected '$f' to raise '$expected_err'" >&2
				exit 1
			fi
		done <<-!
		$(grep '# *check:' "$f" | sed 's/# *check: *//')
		!
		;;
	*)
		echo "$0: unknown test type '$type'" >&2
		exit 1
		;;
esac
